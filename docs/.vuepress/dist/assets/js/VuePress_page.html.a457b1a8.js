"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[753],{131:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>r,data:()=>d});var a=n(641);const s={},r=(0,n(262).A)(s,[["render",function(e,t){const n=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[11]||(t[11]=(0,a.Fv)('<h1 id="页面" tabindex="-1"><a class="header-anchor" href="#页面"><span>页面</span></a></h1><p>VuePress 是以 Markdown 为中心的。你项目中的每一个 Markdown 文件都是一个单独的页面。</p><h2 id="路由" tabindex="-1"><a class="header-anchor" href="#路由"><span>路由</span></a></h2><p>默认情况下，页面的路由路径是根据你的 Markdown 文件的相对路径决定的。</p><p>假设这是你的 Markdown 文件所处的目录结构：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">└─ docs</span>\n<span class="line">   ├─ guide</span>\n<span class="line">   │  ├─ getting-started.md</span>\n<span class="line">   │  └─ README.md</span>\n<span class="line">   ├─ contributing.md</span>\n<span class="line">   └─ README.md</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>相对路径</th><th>路由路径</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/index.md</code></td><td><code>/</code></td></tr><tr><td><code>/contributing.md</code></td><td><code>/contributing.html</code></td></tr><tr><td><code>/guide/README.md</code></td><td><code>/guide/</code></td></tr><tr><td><code>/guide/getting-started.md</code></td><td><code>/guide/getting-started.html</code></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>默认配置下， <code>README.md</code> 和 <code>index.md</code> 都会被转换成 <code>index.html</code> ，并且其对应的路由路径都是由斜杠结尾的。然而，如果你想同时保留这两个文件，就可能会造成冲突。</p><p>在这种情况下，你可以设置 pagePatterns 来避免某个文件被 VuePress 处理，例如使用 <code>[&#39;**/*.md&#39;, &#39;!**/README.md&#39;, &#39;!.vuepress&#39;, &#39;!node_modules&#39;]</code> 来排除所有的 <code>README.md</code> 文件。</p><p>此外，一些符号如 <code>:</code> 和 <code>+</code> 可能对 vue-router 有特殊含义，因此你应该避免使用它们，请参阅 <a href="https://router.vuejs.org/zh/guide/essentials/route-matching-syntax.html" target="_blank" rel="noopener noreferrer">vue-router 文档</a> 了解更多详情。</p></div><h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter"><span>Frontmatter</span></a></h2><p>Markdown 文件可以包含一个 <a href="https://yaml.org/" target="_blank" rel="noopener noreferrer">YAML</a> Frontmatter 。Frontmatter 必须在 Markdown 文件的顶部，并且被包裹在一对三短划线中间。下面是一个基本的示例：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token front-matter-block"><span class="token punctuation">---</span></span>\n<span class="line"><span class="token front-matter yaml language-yaml"><span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN</span>\n<span class="line"><span class="token key atrule">title</span><span class="token punctuation">:</span> 页面的标题</span>\n<span class="line"><span class="token key atrule">description</span><span class="token punctuation">:</span> 页面的描述</span></span>\n<span class="line"><span class="token punctuation">---</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',11)),(0,a.Lk)("p",null,[t[2]||(t[2]=(0,a.eW)("你肯定注意到 Frontmatter 中的字段和")),(0,a.bF)(n,{to:"/VuePress/configuration.html#config-file"},{default:(0,a.k6)((()=>t[0]||(t[0]=[(0,a.eW)("配置文件")]))),_:1}),t[3]||(t[3]=(0,a.eW)("中的")),(0,a.bF)(n,{to:"/VuePress/configuration.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE"},{default:(0,a.k6)((()=>t[1]||(t[1]=[(0,a.eW)("站点配置")]))),_:1}),t[4]||(t[4]=(0,a.eW)("十分类似。你可以通过 Frontmatter 来覆盖当前页面的 ")),t[5]||(t[5]=(0,a.Lk)("code",null,"lang",-1)),t[6]||(t[6]=(0,a.eW)(", ")),t[7]||(t[7]=(0,a.Lk)("code",null,"title",-1)),t[8]||(t[8]=(0,a.eW)(", ")),t[9]||(t[9]=(0,a.Lk)("code",null,"description",-1)),t[10]||(t[10]=(0,a.eW)(" 等属性。因此，你可以把 Frontmatter 当作页面级作用域的配置。"))]),t[12]||(t[12]=(0,a.Fv)('<p>同样的，VuePress 有一些内置支持的 Frontmatter 字段，而你使用的主题也可能有它自己的特殊 Frontmatter 。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>前往 <a href="https://ecosystem.vuejs.press/zh/themes/default/frontmatter.html" target="_blank" rel="noopener noreferrer">默认主题 &gt; Frontmatter 参考</a> 查看默认主题的 Frontmatter 配置。</p></div><h2 id="内容" tabindex="-1"><a class="header-anchor" href="#内容"><span>内容</span></a></h2><p>页面的主要内容是使用 Markdown 书写的。VuePress 首先会将 Markdown 转换为 HTML ，然后将 HTML 作为 Vue 单文件组件的 <code>&lt;template&gt;</code> 。</p><p>借助 <a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener noreferrer">markdown-it</a> 和 Vue 模板语法的能力，基础的 Markdown 可以得到很多的扩展功能。</p>',5))])}]]),d=JSON.parse('{"path":"/VuePress/page.html","title":"页面","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"路由","slug":"路由","link":"#路由","children":[]},{"level":2,"title":"Frontmatter","slug":"frontmatter","link":"#frontmatter","children":[]},{"level":2,"title":"内容","slug":"内容","link":"#内容","children":[]}],"git":{"updatedTime":1730769527000},"filePathRelative":"VuePress/page.md"}')}}]);